name: Docker ECR Workflows

on:
  push:
    branches:
      - main

env:
  ECR_REGISTRY: 533266969283.dkr.ecr.ap-south-2.amazonaws.com/nodejs_appplication_repo

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials for Docker
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get existing image IDs
        id: get-image-ids
        run: |
          IMAGE_IDS=$(aws ecr describe-images --repository-name nodejs_appplication_repo --query 'imageDetails[*].[imageDigest]' --output text)
          echo "::set-output name=image_ids::$IMAGE_IDS"

      - name: Delete existing Docker image in ECR
        run: |
          for IMAGE_ID in ${{ steps.get-image-ids.outputs.image_ids }}; do
            aws ecr batch-delete-image --repository-name nodejs_appplication_repo --image-ids imageDigest=$IMAGE_ID
          done

      - name: Build and push Nodejs-app Docker images
        env:
          IMAGE_TAG: latest
        working-directory: Nodejs_Module
        run: |
          docker build -t $ECR_REGISTRY:$IMAGE_TAG .
          docker push $ECR_REGISTRY:$IMAGE_TAG
